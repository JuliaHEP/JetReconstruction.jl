import{_ as e,c as t,o as i,a7 as s}from"./chunks/framework.CICdM3gW.js";const b=JSON.parse('{"title":"Jet Reconstruction Internal Documentation","description":"","frontmatter":{},"headers":[],"relativePath":"lib/internal.md","filePath":"lib/internal.md","lastUpdated":null}'),o={name:"lib/internal.md"},n=s(`<h1 id="Jet-Reconstruction-Internal-Documentation" tabindex="-1">Jet Reconstruction Internal Documentation <a class="header-anchor" href="#Jet-Reconstruction-Internal-Documentation" aria-label="Permalink to &quot;Jet Reconstruction Internal Documentation {#Jet-Reconstruction-Internal-Documentation}&quot;">​</a></h1><p>Documentation for <code>JetReconstruction.jl</code>&#39;s internal methods and types.</p><p>N.B. no guarantee is made of stability of these interfaces or types.</p><h2 id="index" tabindex="-1">Index <a class="header-anchor" href="#index" aria-label="Permalink to &quot;Index&quot;">​</a></h2><ul><li><a href="#JetReconstruction.FourMomentum"><code>JetReconstruction.FourMomentum</code></a></li><li><a href="#JetReconstruction.HistoryElement"><code>JetReconstruction.HistoryElement</code></a></li><li><a href="#JetReconstruction.HistoryElement-Tuple{Any}"><code>JetReconstruction.HistoryElement</code></a></li><li><a href="#JetReconstruction.JetWithAncestors"><code>JetReconstruction.JetWithAncestors</code></a></li><li><a href="#JetReconstruction.Surrounding"><code>JetReconstruction.Surrounding</code></a></li><li><a href="#JetReconstruction.TiledJet-Tuple{Any}"><code>JetReconstruction.TiledJet</code></a></li><li><a href="#JetReconstruction.TiledJet"><code>JetReconstruction.TiledJet</code></a></li><li><a href="#JetReconstruction.Tiling-Tuple{JetReconstruction.TilingDef}"><code>JetReconstruction.Tiling</code></a></li><li><a href="#JetReconstruction.Tiling"><code>JetReconstruction.Tiling</code></a></li><li><a href="#JetReconstruction.TilingDef"><code>JetReconstruction.TilingDef</code></a></li><li><a href="#JetReconstruction.neighbour_tiles"><code>JetReconstruction.neighbour_tiles</code></a></li><li><a href="#JetReconstruction.rightmost_tiles"><code>JetReconstruction.rightmost_tiles</code></a></li><li><a href="#Base.:+-Tuple{PseudoJet, PseudoJet}"><code>Base.:+</code></a></li><li><a href="#Base.copy-Tuple{JetReconstruction.TiledJet}"><code>Base.copy</code></a></li><li><a href="#Base.iterate-Tuple{JetReconstruction.TiledJet}"><code>Base.iterate</code></a></li><li><a href="#Base.iterate"><code>Base.iterate</code></a></li><li><a href="#Base.iterate"><code>Base.iterate</code></a></li><li><a href="#Base.show-Tuple{IO, PseudoJet}"><code>Base.show</code></a></li><li><a href="#Base.tryparse-Tuple{Type{&lt;:Enum}, String}"><code>Base.tryparse</code></a></li><li><a href="#JetReconstruction.CosTheta-Tuple{PseudoJet}"><code>JetReconstruction.CosTheta</code></a></li><li><a href="#JetReconstruction._ensure_valid_rap_phi-Tuple{PseudoJet}"><code>JetReconstruction._ensure_valid_rap_phi</code></a></li><li><a href="#JetReconstruction._plain_jet_reconstruct-Tuple{}"><code>JetReconstruction._plain_jet_reconstruct</code></a></li><li><a href="#JetReconstruction._set_rap_phi!-Tuple{PseudoJet}"><code>JetReconstruction._set_rap_phi!</code></a></li><li><a href="#JetReconstruction._tiled_jet_reconstruct-Tuple{Vector{PseudoJet}}"><code>JetReconstruction._tiled_jet_reconstruct</code></a></li><li><a href="#JetReconstruction._tj_diJ-Tuple{Any}"><code>JetReconstruction._tj_diJ</code></a></li><li><a href="#JetReconstruction._tj_dist-Tuple{Any, Any}"><code>JetReconstruction._tj_dist</code></a></li><li><a href="#JetReconstruction.add_step_to_history!-Tuple{ClusterSequence, Vararg{Any, 4}}"><code>JetReconstruction.add_step_to_history!</code></a></li><li><a href="#JetReconstruction.add_untagged_neighbours_to_tile_union-NTuple{4, Any}"><code>JetReconstruction.add_untagged_neighbours_to_tile_union</code></a></li><li><a href="#JetReconstruction.check_algorithm_power_consistency-Tuple{}"><code>JetReconstruction.check_algorithm_power_consistency</code></a></li><li><a href="#JetReconstruction.detach!-Tuple{JetReconstruction.TiledJet}"><code>JetReconstruction.detach!</code></a></li><li><a href="#JetReconstruction.determine_rapidity_extent-Union{Tuple{Vector{T}}, Tuple{T}} where T&lt;:AbstractFloat"><code>JetReconstruction.determine_rapidity_extent</code></a></li><li><a href="#JetReconstruction.dij-NTuple{4, Any}"><code>JetReconstruction.dij</code></a></li><li><a href="#JetReconstruction.dist-NTuple{4, Any}"><code>JetReconstruction.dist</code></a></li><li><a href="#JetReconstruction.do_iB_recombination_step!-Tuple{ClusterSequence, Any, Any}"><code>JetReconstruction.do_iB_recombination_step!</code></a></li><li><a href="#JetReconstruction.do_ij_recombination_step!"><code>JetReconstruction.do_ij_recombination_step!</code></a></li><li><a href="#JetReconstruction.energy-Tuple{PseudoJet}"><code>JetReconstruction.energy</code></a></li><li><a href="#JetReconstruction.eta-Tuple{PseudoJet}"><code>JetReconstruction.eta</code></a></li><li><a href="#JetReconstruction.fast_findmin-Tuple{Any, Any}"><code>JetReconstruction.fast_findmin</code></a></li><li><a href="#JetReconstruction.find_tile_neighbours!-NTuple{5, Any}"><code>JetReconstruction.find_tile_neighbours!</code></a></li><li><a href="#JetReconstruction.geometric_distance-NTuple{4, AbstractFloat}"><code>JetReconstruction.geometric_distance</code></a></li><li><a href="#JetReconstruction.get_algorithm_power_consistency-Tuple{}"><code>JetReconstruction.get_algorithm_power_consistency</code></a></li><li><a href="#JetReconstruction.get_all_ancestors-Tuple{Any, ClusterSequence}"><code>JetReconstruction.get_all_ancestors</code></a></li><li><a href="#JetReconstruction.get_dij_dist-NTuple{4, Any}"><code>JetReconstruction.get_dij_dist</code></a></li><li><a href="#JetReconstruction.get_tile-Tuple{JetReconstruction.TilingDef, AbstractFloat, AbstractFloat}"><code>JetReconstruction.get_tile</code></a></li><li><a href="#JetReconstruction.get_tile_cartesian_indices-Tuple{JetReconstruction.TilingDef, Int64}"><code>JetReconstruction.get_tile_cartesian_indices</code></a></li><li><a href="#JetReconstruction.initial_history-Tuple{Any}"><code>JetReconstruction.initial_history</code></a></li><li><a href="#JetReconstruction.insert!-Tuple{JetReconstruction.TiledJet, JetReconstruction.TiledJet}"><code>JetReconstruction.insert!</code></a></li><li><a href="#JetReconstruction.isvalid-Tuple{JetReconstruction.TiledJet}"><code>JetReconstruction.isvalid</code></a></li><li><a href="#JetReconstruction.jet_ranks-Tuple{ClusterSequence}"><code>JetReconstruction.jet_ranks</code></a></li><li><a href="#JetReconstruction.m-Tuple{PseudoJet}"><code>JetReconstruction.m</code></a></li><li><a href="#JetReconstruction.m2-Tuple{PseudoJet}"><code>JetReconstruction.m2</code></a></li><li><a href="#JetReconstruction.mag-Tuple{PseudoJet}"><code>JetReconstruction.mag</code></a></li><li><a href="#JetReconstruction.mass-Tuple{PseudoJet}"><code>JetReconstruction.mass</code></a></li><li><a href="#JetReconstruction.mass2"><code>JetReconstruction.mass2</code></a></li><li><a href="#JetReconstruction.merge_steps-Tuple{ClusterSequence}"><code>JetReconstruction.merge_steps</code></a></li><li><a href="#JetReconstruction.phi-Tuple{PseudoJet}"><code>JetReconstruction.phi</code></a></li><li><a href="#JetReconstruction.phi_02pi-Tuple{PseudoJet}"><code>JetReconstruction.phi_02pi</code></a></li><li><a href="#JetReconstruction.pt-Tuple{PseudoJet}"><code>JetReconstruction.pt</code></a></li><li><a href="#JetReconstruction.pt2-Tuple{PseudoJet}"><code>JetReconstruction.pt2</code></a></li><li><a href="#JetReconstruction.px-Tuple{PseudoJet}"><code>JetReconstruction.px</code></a></li><li><a href="#JetReconstruction.py-Tuple{PseudoJet}"><code>JetReconstruction.py</code></a></li><li><a href="#JetReconstruction.pz-Tuple{PseudoJet}"><code>JetReconstruction.pz</code></a></li><li><a href="#JetReconstruction.rapidity-Tuple{PseudoJet}"><code>JetReconstruction.rapidity</code></a></li><li><a href="#JetReconstruction.reco_state-Tuple{ClusterSequence, Any}"><code>JetReconstruction.reco_state</code></a></li><li><a href="#JetReconstruction.rightneighbours-Tuple{Int64, JetReconstruction.Tiling}"><code>JetReconstruction.rightneighbours</code></a></li><li><a href="#JetReconstruction.set_momentum!-Tuple{PseudoJet, Vararg{Any, 4}}"><code>JetReconstruction.set_momentum!</code></a></li><li><a href="#JetReconstruction.set_nearest_neighbours!-Tuple{ClusterSequence, JetReconstruction.Tiling, Vector{JetReconstruction.TiledJet}}"><code>JetReconstruction.set_nearest_neighbours!</code></a></li><li><a href="#JetReconstruction.setup_tiling-Union{Tuple{T}, Tuple{Vector{T}, AbstractFloat}} where T&lt;:AbstractFloat"><code>JetReconstruction.setup_tiling</code></a></li><li><a href="#JetReconstruction.surrounding-Tuple{Int64, JetReconstruction.Tiling}"><code>JetReconstruction.surrounding</code></a></li><li><a href="#JetReconstruction.tile_index-Tuple{Any, Float64, Float64}"><code>JetReconstruction.tile_index</code></a></li><li><a href="#JetReconstruction.tiledjet_remove_from_tiles!-Tuple{Any, Any}"><code>JetReconstruction.tiledjet_remove_from_tiles!</code></a></li><li><a href="#JetReconstruction.tiledjet_set_jetinfo!-Tuple{JetReconstruction.TiledJet, ClusterSequence, JetReconstruction.Tiling, Any, Any, Any}"><code>JetReconstruction.tiledjet_set_jetinfo!</code></a></li><li><a href="#JetReconstruction.upd_nn_crosscheck!-Tuple{Int64, Int64, Int64, Vararg{Any, 5}}"><code>JetReconstruction.upd_nn_crosscheck!</code></a></li><li><a href="#JetReconstruction.upd_nn_nocross!-Tuple{Int64, Int64, Int64, Vararg{Any, 5}}"><code>JetReconstruction.upd_nn_nocross!</code></a></li><li><a href="#JetReconstruction.upd_nn_step!-NTuple{12, Any}"><code>JetReconstruction.upd_nn_step!</code></a></li><li><a href="#JetReconstruction.η"><code>JetReconstruction.η</code></a></li></ul><h2 id="Public-Interface" tabindex="-1">Public Interface <a class="header-anchor" href="#Public-Interface" aria-label="Permalink to &quot;Public Interface {#Public-Interface}&quot;">​</a></h2><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Base.:+-Tuple{PseudoJet, PseudoJet}" href="#Base.:+-Tuple{PseudoJet, PseudoJet}">#</a> <b><u>Base.:+</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(j1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PseudoJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, j2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PseudoJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Addition operator for <code>PseudoJet</code> objects.</p><p><strong>Arguments</strong></p><ul><li><p><code>j1::PseudoJet</code>: The first <code>PseudoJet</code> object.</p></li><li><p><code>j2::PseudoJet</code>: The second <code>PseudoJet</code> object.</p></li></ul><p><strong>Returns</strong></p><p>A new <code>PseudoJet</code> object with the sum of the momenta and energy of <code>j1</code> and <code>j2</code>.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/Pseudojet.jl#L434-L445" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Base.copy-Tuple{JetReconstruction.TiledJet}" href="#Base.copy-Tuple{JetReconstruction.TiledJet}">#</a> <b><u>Base.copy</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">copy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(j</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TiledJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Create a copy of a <code>TiledJet</code> object.</p><p><strong>Arguments</strong></p><ul><li><code>j::TiledJet</code>: The <code>TiledJet</code> object to be copied.</li></ul><p><strong>Returns</strong></p><p>A new <code>TiledJet</code> object with the same attributes as the input object.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoLLStructs.jl#L136-L146" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Base.iterate" href="#Base.iterate">#</a> <b><u>Base.iterate</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">iterate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rightmost_tiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, state</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Iterate over the <code>rightmost_tiles</code> object, returning all the rightmost tiles for a given Cartesian tile index.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoUtils.jl#L316-L321" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Base.iterate-2" href="#Base.iterate-2">#</a> <b><u>Base.iterate</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">iterate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">neighbour_tiles</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, state</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Iterate over the <code>neighbour_tiles</code> object, returning all the neighbour tiles for a given Cartesian tile index.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoUtils.jl#L368-L373" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Base.iterate-Tuple{JetReconstruction.TiledJet}" href="#Base.iterate-Tuple{JetReconstruction.TiledJet}">#</a> <b><u>Base.iterate</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">iterate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tj</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TiledJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Iterate over a <code>TiledJet</code> object&#39;s linked list, walking over all jets until the end (then the next jet is invalid).</p><p><strong>Arguments</strong></p><ul><li><code>tj::TiledJet</code>: The <code>TiledJet</code> object to start to iterate over.</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoLLStructs.jl#L153-L161" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Base.show-Tuple{IO, PseudoJet}" href="#Base.show-Tuple{IO, PseudoJet}">#</a> <b><u>Base.show</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">show</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(io</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">IO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, jet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PseudoJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Print a <code>PseudoJet</code> object to the specified IO stream.</p><p><strong>Arguments</strong></p><ul><li><p><code>io::IO</code>: The IO stream to which the information will be printed.</p></li><li><p><code>jet::PseudoJet</code>: The <code>PseudoJet</code> object whose information will be printed.</p></li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/Pseudojet.jl#L102-L110" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="Base.tryparse-Tuple{Type{&lt;:Enum}, String}" href="#Base.tryparse-Tuple{Type{&lt;:Enum}, String}">#</a> <b><u>Base.tryparse</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Base</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tryparse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(E</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{&lt;:Enum}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, str</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Parser that converts a string to an enum value if it exists, otherwise returns nothing.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/AlgorithmStrategyEnums.jl#L60-L64" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.CosTheta-Tuple{PseudoJet}" href="#JetReconstruction.CosTheta-Tuple{PseudoJet}">#</a> <b><u>JetReconstruction.CosTheta</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CosTheta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PseudoJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the cosine of the angle between the momentum vector <code>p</code> and the z-axis.</p><p><strong>Arguments</strong></p><ul><li><code>p::PseudoJet</code>: The PseudoJet object representing the momentum vector.</li></ul><p><strong>Returns</strong></p><ul><li>The cosine of the angle between <code>p</code> and the z-axis.</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/Pseudojet.jl#L301-L311" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction._ensure_valid_rap_phi-Tuple{PseudoJet}" href="#JetReconstruction._ensure_valid_rap_phi-Tuple{PseudoJet}">#</a> <b><u>JetReconstruction._ensure_valid_rap_phi</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_ensure_valid_rap_phi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PseudoJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Ensure that the rapidity and azimuthal angle of the PseudoJet <code>p</code> are valid. If the azimuthal angle is invalid (used as a proxy for both variables), they are set to a valid value using <code>_set_rap_phi!</code>.</p><p><strong>Arguments</strong></p><ul><li><code>p::PseudoJet</code>: The PseudoJet object to ensure valid rapidity and azimuthal angle for.</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/Pseudojet.jl#L141-L151" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction._plain_jet_reconstruct-Tuple{}" href="#JetReconstruction._plain_jet_reconstruct-Tuple{}">#</a> <b><u>JetReconstruction._plain_jet_reconstruct</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_plain_jet_reconstruct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; particles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{PseudoJet}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, R </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, recombine </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>This is the internal implementation of jet reconstruction using the plain algorithm. It takes a vector of <code>particles</code> representing the input particles and reconstructs jets based on the specified parameters. Here the particles must be of type <code>PseudoJet</code>.</p><p>Users of the package should use the <code>plain_jet_reconstruct</code> function as their entry point to this jet reconstruction.</p><p>The power value maps to specific pp jet reconstruction algorithms: -1 = AntiKt, 0 = Cambridge/Aachen, 1 = Inclusive Kt. Floating point values are allowed for generalised k_t algorithm.</p><p><strong>Arguments</strong></p><ul><li><p><code>particles</code>: A vector of <code>PseudoJet</code> objects representing the input particles.</p></li><li><p><code>p=-1</code>: The power to which the transverse momentum (<code>pt</code>) of each particle is raised.</p></li><li><p><code>R=1.0</code>: The jet radius parameter.</p></li><li><p><code>recombine</code>: The recombination function used to merge two jets. Default is <code>+</code> (additive recombination).</p></li></ul><p><strong>Returns</strong></p><ul><li><code>clusterseq</code>: The resulting <code>ClusterSequence</code> object representing the reconstructed jets.</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/PlainAlgo.jl#L245-L271" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction._set_rap_phi!-Tuple{PseudoJet}" href="#JetReconstruction._set_rap_phi!-Tuple{PseudoJet}">#</a> <b><u>JetReconstruction._set_rap_phi!</u></b> — <i>Method</i>. <p>_set_rap_phi!(p::PseudoJet)</p><p>Set the rapidity and azimuthal angle of the PseudoJet <code>p</code>.</p><p><strong>Arguments</strong></p><ul><li><code>p::PseudoJet</code>: The PseudoJet object for which to set the rapidity and azimuthal angle.</li></ul><p><strong>Description</strong></p><p>This function calculates and sets the rapidity and azimuthal angle of the PseudoJet <code>p</code> based on its momentum components. The rapidity is calculated in a way that is insensitive to roundoff errors when the momentum components are large. If the PseudoJet represents a point with infinite rapidity, a large number is assigned to the rapidity in order to lift the degeneracy between different zero-pt momenta.</p><p>Note - the ϕ angle is calculated in the range [0, 2π).</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/Pseudojet.jl#L154-L172" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction._tiled_jet_reconstruct-Tuple{Vector{PseudoJet}}" href="#JetReconstruction._tiled_jet_reconstruct-Tuple{Vector{PseudoJet}}">#</a> <b><u>JetReconstruction._tiled_jet_reconstruct</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_tiled_jet_reconstruct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(particles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{PseudoJet}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> -</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, R </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, recombine </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {T}</span></span></code></pre></div><p>Main jet reconstruction algorithm entry point for reconstructing jets once preprocessing of data types are done.</p><p><strong>Arguments</strong></p><ul><li><p><code>particles::Vector{PseudoJet}</code>: A vector of <code>PseudoJet</code> particles used as input for jet reconstruction.</p></li><li><p><code>p::Int = -1</code>: The power parameter for the jet reconstruction algorithm, thus swiching between different algorithms.</p></li><li><p><code>R::Float64 = 1.0</code>: The jet radius parameter for the jet reconstruction algorithm.</p></li><li><p><code>recombine::Function = +</code>: The recombination function used for combining pseudojets.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>Vector{PseudoJet}</code>: A vector of reconstructed jets.</li></ul><p><strong>Example</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tiled_jet_reconstruct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(particles</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{PseudoJet}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, R </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, recombine </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoLL.jl#L430-L453" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction._tj_diJ-Tuple{Any}" href="#JetReconstruction._tj_diJ-Tuple{Any}">#</a> <b><u>JetReconstruction._tj_diJ</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_tj_diJ</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(jet)</span></span></code></pre></div><p>Compute the dij metric value for a given jet.</p><p><strong>Arguments</strong></p><ul><li><code>jet</code>: The input jet.</li></ul><p><strong>Returns</strong></p><ul><li>The dij value for the jet.</li></ul><p><strong>Example</strong></p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoLL.jl#L64-L76" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction._tj_dist-Tuple{Any, Any}" href="#JetReconstruction._tj_dist-Tuple{Any, Any}">#</a> <b><u>JetReconstruction._tj_dist</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">_tj_dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(jetA, jetB)</span></span></code></pre></div><p>Compute the geometric distance in the (y, ϕ)-plane between two jets in the TiledAlgoLL module.</p><p><strong>Arguments</strong></p><ul><li><p><code>jetA</code>: The first jet.</p></li><li><p><code>jetB</code>: The second jet.</p></li></ul><p><strong>Returns</strong></p><p>The squared distance between <code>jetA</code> and <code>jetB</code>.</p><p><strong>Examples</strong></p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoLL.jl#L44-L57" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.add_step_to_history!-Tuple{ClusterSequence, Vararg{Any, 4}}" href="#JetReconstruction.add_step_to_history!-Tuple{ClusterSequence, Vararg{Any, 4}}">#</a> <b><u>JetReconstruction.add_step_to_history!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_step_to_history!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(clusterseq</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClusterSequence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, parent1, parent2, jetp_index, dij)</span></span></code></pre></div><p>Add a new jet&#39;s history into the recombination sequence.</p><p>Arguments:</p><ul><li><p><code>clusterseq::ClusterSequence</code>: The cluster sequence object.</p></li><li><p><code>parent1</code>: The index of the first parent.</p></li><li><p><code>parent2</code>: The index of the second parent.</p></li><li><p><code>jetp_index</code>: The index of the jet.</p></li><li><p><code>dij</code>: The dij value.</p></li></ul><p>This function adds a new <code>HistoryElement</code> to the <code>history</code> vector of the <code>clusterseq</code> object. The <code>HistoryElement</code> contains information about the parents, child, jet index, dij value, and the maximum dij value so far. It also updates the child index of the parent elements.</p><p>If the <code>parent1</code> or <code>parent2</code> have already been recombined, an <code>InternalError</code> is thrown. The <code>jetp_index</code> is used to update the <code>_cluster_hist_index</code> of the corresponding <code>PseudoJet</code> object.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/ClusterSequence.jl#L118-L138" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.add_untagged_neighbours_to_tile_union-NTuple{4, Any}" href="#JetReconstruction.add_untagged_neighbours_to_tile_union-NTuple{4, Any}">#</a> <b><u>JetReconstruction.add_untagged_neighbours_to_tile_union</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">add_untagged_neighbours_to_tile_union</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(center_index, tile_union, n_near_tiles, tiling)</span></span></code></pre></div><p>Adds to the vector tile_union the tiles that are in the neighbourhood of the specified center_index, including itself and whose tagged status are false - start adding from position n_near_tiles-1, and increase n_near_tiles. When a neighbour is added its tagged status is set to true.</p><p><strong>Arguments</strong></p><ul><li><p><code>center_index</code>: The index of the center tile.</p></li><li><p><code>tile_union</code>: An array to store the indices of neighbouring tiles.</p></li><li><p><code>n_near_tiles</code>: The number of neighbouring tiles.</p></li><li><p><code>tiling</code>: The tiling object containing the tile tags.</p></li></ul><p><strong>Returns</strong></p><p>The updated number of near tiles.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoLL.jl#L298-L314" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.check_algorithm_power_consistency-Tuple{}" href="#JetReconstruction.check_algorithm_power_consistency-Tuple{}">#</a> <b><u>JetReconstruction.check_algorithm_power_consistency</u></b> — <i>Method</i>. <p>Allow a check for algorithm and power consistency</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/AlgorithmStrategyEnums.jl#L123" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.detach!-Tuple{JetReconstruction.TiledJet}" href="#JetReconstruction.detach!-Tuple{JetReconstruction.TiledJet}">#</a> <b><u>JetReconstruction.detach!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">detach!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(jet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TiledJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Detach a <code>TiledJet</code> from its linked list by updating the <code>previous</code> and <code>next</code> pointers.</p><p><strong>Arguments</strong></p><ul><li><code>jet::TiledJet</code>: The <code>TiledJet</code> object to detach.</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoLLStructs.jl#L117-L124" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.determine_rapidity_extent-Union{Tuple{Vector{T}}, Tuple{T}} where T&lt;:AbstractFloat" href="#JetReconstruction.determine_rapidity_extent-Union{Tuple{Vector{T}}, Tuple{T}} where T&lt;:AbstractFloat">#</a> <b><u>JetReconstruction.determine_rapidity_extent</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">determine_rapidity_extent</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(eta</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractFloat</span></span></code></pre></div><p>Calculate the minimum and maximum rapidities based on the input vector <code>eta</code>. The function determines the rapidity extent by binning the multiplicities as a function of rapidity and finding the minimum and maximum rapidities such that the edge bins contain a certain fraction (~1/4) of the busiest bin and a minimum number of particles.</p><p>This is the heuristic which is used by FastJet (inline comments are from FastJet).</p><p><strong>Arguments</strong></p><ul><li><code>eta::Vector{T}</code>: A vector of rapidity values.</li></ul><p><strong>Returns</strong></p><ul><li><p><code>minrap::T</code>: The minimum rapidity value.</p></li><li><p><code>maxrap::T</code>: The maximum rapidity value.</p></li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoUtils.jl#L44-L61" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.dij-NTuple{4, Any}" href="#JetReconstruction.dij-NTuple{4, Any}">#</a> <b><u>JetReconstruction.dij</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dij</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i, kt2_array, nn, nndist)</span></span></code></pre></div><p>Compute the dij value for a given index <code>i</code> to its nearest neighbor. The nearest neighbor is determined from <code>nn[i]</code>, and the metric distance to the nearest neighbor is given by the distance <code>nndist[i]</code> applying the lower of the <code>kt2_array</code> values for the two particles.ßß</p><p><strong>Arguments</strong></p><ul><li><p><code>i</code>: The index of the element.</p></li><li><p><code>kt2_array</code>: An array of kt2 values.</p></li><li><p><code>nn</code>: An array of nearest neighbors.</p></li><li><p><code>nndist</code>: An array of nearest neighbor distances.</p></li></ul><p><strong>Returns</strong></p><ul><li>The computed dij value.</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/PlainAlgo.jl#L24-L40" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.dist-NTuple{4, Any}" href="#JetReconstruction.dist-NTuple{4, Any}">#</a> <b><u>JetReconstruction.dist</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i, j, rapidity_array, phi_array)</span></span></code></pre></div><p>Compute the distance between points in a 2D space defined by rapidity and phi coordinates.</p><p><strong>Arguments</strong></p><ul><li><p><code>i::Int</code>: Index of the first point to consider (indexes into <code>rapidity_array</code> and <code>phi_array</code>).</p></li><li><p><code>j::Int</code>: Index of the second point to consider (indexes into <code>rapidity_array</code> and <code>phi_array</code>).</p></li><li><p><code>rapidity_array::Vector{Float64}</code>: Array of rapidity coordinates.</p></li><li><p><code>phi_array::Vector{Float64}</code>: Array of phi coordinates.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>distance::Float64</code>: The distance between the two points.</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/PlainAlgo.jl#L3-L16" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.do_iB_recombination_step!-Tuple{ClusterSequence, Any, Any}" href="#JetReconstruction.do_iB_recombination_step!-Tuple{ClusterSequence, Any, Any}">#</a> <b><u>JetReconstruction.do_iB_recombination_step!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">do_iB_recombination_step!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(clusterseq</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClusterSequence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, jet_i, diB)</span></span></code></pre></div><p>Bookkeeping for recombining a jet with the beam (i.e., finalising the jet) by adding a step to the history of the cluster sequence.</p><p><strong>Arguments</strong></p><ul><li><p><code>clusterseq::ClusterSequence</code>: The cluster sequence object.</p></li><li><p><code>jet_i</code>: The index of the jet.</p></li><li><p><code>diB</code>: The diB value.</p></li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoLL.jl#L281-L291" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.do_ij_recombination_step!" href="#JetReconstruction.do_ij_recombination_step!">#</a> <b><u>JetReconstruction.do_ij_recombination_step!</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">do_ij_recombination_step!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(clusterseq</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClusterSequence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, jet_i, jet_j, dij, recombine</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=+</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Perform the bookkeeping associated with the step of recombining jet_i and jet_j (assuming a distance dij).</p><p><strong>Arguments</strong></p><ul><li><p><code>clusterseq::ClusterSequence</code>: The cluster sequence object.</p></li><li><p><code>jet_i</code>: The index of the first jet to be recombined.</p></li><li><p><code>jet_j</code>: The index of the second jet to be recombined.</p></li><li><p><code>dij</code>: The distance between the two jets.</p></li><li><p><code>recombine=+</code>: The recombination function to be used. Default is addition.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>newjet_k</code>: The index of the newly created jet.</li></ul><p><strong>Description</strong></p><p>This function performs the i-j recombination step in the cluster sequence. It creates a new jet by recombining the first two jets using the specified recombination function. The new jet is then added to the cluster sequence. The function also updates the indices and history information of the new jet and sorts out the history.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoLL.jl#L236-L258" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.energy-Tuple{PseudoJet}" href="#JetReconstruction.energy-Tuple{PseudoJet}">#</a> <b><u>JetReconstruction.energy</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">energy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PseudoJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the energy of a <code>PseudoJet</code>.</p><p><strong>Arguments</strong></p><ul><li><code>p::PseudoJet</code>: The <code>PseudoJet</code> object.</li></ul><p><strong>Returns</strong></p><ul><li>The energy of the <code>PseudoJet</code>.</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/Pseudojet.jl#L419-L429" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.eta-Tuple{PseudoJet}" href="#JetReconstruction.eta-Tuple{PseudoJet}">#</a> <b><u>JetReconstruction.eta</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">eta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PseudoJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the pseudorapidity (η) of a PseudoJet.</p><p><strong>Arguments</strong></p><ul><li><code>p::PseudoJet</code>: The PseudoJet object for which to compute the pseudorapidity.</li></ul><p><strong>Returns</strong></p><ul><li>The pseudorapidity (η) of the PseudoJet.</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/Pseudojet.jl#L318-L328" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.fast_findmin-Tuple{Any, Any}" href="#JetReconstruction.fast_findmin-Tuple{Any, Any}">#</a> <b><u>JetReconstruction.fast_findmin</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">fast_findmin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dij, n)</span></span></code></pre></div><p>Find the minimum value and its index in the first <code>n</code> elements of the <code>dij</code> array. The use of <code>@turbo</code> macro gives a significiant performance boost.</p><p><strong>Arguments</strong></p><ul><li><p><code>dij</code>: An array of values.</p></li><li><p><code>n</code>: The number of elements to consider in the <code>dij</code> array.</p></li></ul><p><strong>Returns</strong></p><ul><li><p><code>dij_min</code>: The minimum value in the first <code>n</code> elements of the <code>dij</code> array.</p></li><li><p><code>best</code>: The index of the minimum value in the <code>dij</code> array.</p></li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/Utils.jl#L122-L135" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.find_tile_neighbours!-NTuple{5, Any}" href="#JetReconstruction.find_tile_neighbours!-NTuple{5, Any}">#</a> <b><u>JetReconstruction.find_tile_neighbours!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">find_tile_neighbours!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tile_union, jetA, jetB, oldB, tiling)</span></span></code></pre></div><p>Find the union of neighbouring tiles of <code>jetA</code>, <code>jetB</code>, and <code>oldB</code> and add them to the <code>tile_union</code>. This established the set of tiles over which searches for updated and new nearest-neighbours must be run</p><p><strong>Arguments</strong></p><ul><li><p><code>tile_union</code>: The tile union to which the neighbouring tiles will be added.</p></li><li><p><code>jetA</code>: The first jet.</p></li><li><p><code>jetB</code>: The second jet.</p></li><li><p><code>oldB</code>: The old second jet.</p></li><li><p><code>tiling</code>: The tiling information.</p></li></ul><p><strong>Returns</strong></p><p>The number of neighbouring tiles added to the <code>tile_union</code>.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoLL.jl#L328-L344" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.geometric_distance-NTuple{4, AbstractFloat}" href="#JetReconstruction.geometric_distance-NTuple{4, AbstractFloat}">#</a> <b><u>JetReconstruction.geometric_distance</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">geometric_distance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(eta1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractFloat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, phi1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractFloat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, eta2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractFloat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, phi2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractFloat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the geometric distance between two points in the rap-phi plane.</p><p><strong>Arguments</strong></p><ul><li><p><code>eta1::AbstractFloat</code>: The eta coordinate of the first point.</p></li><li><p><code>phi1::AbstractFloat</code>: The phi coordinate of the first point.</p></li><li><p><code>eta2::AbstractFloat</code>: The eta coordinate of the second point.</p></li><li><p><code>phi2::AbstractFloat</code>: The phi coordinate of the second point.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>distance::Float64</code>: The geometric distance between the two points.</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoUtils.jl#L188-L201" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.get_algorithm_power_consistency-Tuple{}" href="#JetReconstruction.get_algorithm_power_consistency-Tuple{}">#</a> <b><u>JetReconstruction.get_algorithm_power_consistency</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_algorithm_power_consistency</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{Real, Nothing}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, algorithm</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Union{JetAlgorithm, Nothing}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Get the algorithm and power consistency correct</p><p>This function checks the consistency between the algorithm and power parameters. If the algorithm is specified, it checks if the power parameter is consistent with the algorithm&#39;s known power. If the power parameter is not specified, it sets the power parameter based on the algorithm. If neither the algorithm nor the power parameter is specified, it throws an <code>ArgumentError</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>p::Union{Real, Nothing}</code>: The power value.</p></li><li><p><code>algorithm::Union{JetAlgorithm, Nothing}</code>: The algorithm.</p></li></ul><p><strong>Returns</strong></p><p>A named tuple of the consistent power and algorithm values.</p><p><strong>Throws</strong></p><ul><li><code>ArgumentError</code>: If the algorithm and power are inconsistent or if neither the algorithm nor the power is specified.</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/AlgorithmStrategyEnums.jl#L72-L94" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.get_all_ancestors-Tuple{Any, ClusterSequence}" href="#JetReconstruction.get_all_ancestors-Tuple{Any, ClusterSequence}">#</a> <b><u>JetReconstruction.get_all_ancestors</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_all_ancestors</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(idx, cs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClusterSequence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Recursively finds all ancestors of a given index in a <code>ClusterSequence</code> object.</p><p><strong>Arguments</strong></p><ul><li><p><code>idx</code>: The index of the jet for which to find ancestors.</p></li><li><p><code>cs</code>: The <code>ClusterSequence</code> object containing the jet history.</p></li></ul><p><strong>Returns</strong></p><p>An array of indices representing the ancestors of the given jet.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/ClusterSequence.jl#L360-L371" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.get_dij_dist-NTuple{4, Any}" href="#JetReconstruction.get_dij_dist-NTuple{4, Any}">#</a> <b><u>JetReconstruction.get_dij_dist</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_dij_dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(nn_dist, kt2_1, kt2_2, R2)</span></span></code></pre></div><p>Compute the dij metric distance between two jets.</p><p><strong>Arguments</strong></p><ul><li><p><code>nn_dist</code>: The nearest-neighbor distance between two jets.</p></li><li><p><code>kt2_1</code>: The squared momentum metric value of the first jet.</p></li><li><p><code>kt2_2</code>: The squared momentum metric value of the second jet.</p></li><li><p><code>R2</code>: The jet radius parameter squared.</p></li></ul><p><strong>Returns</strong></p><p>The distance between the two jets.</p><p>If <code>kt2_2</code> is equal to 0.0, then the first jet doesn&#39;t actually have a valid neighbour, so it&#39;s treated as a single jet adjecent to the beam.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoUtils.jl#L208-L224" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.get_tile-Tuple{JetReconstruction.TilingDef, AbstractFloat, AbstractFloat}" href="#JetReconstruction.get_tile-Tuple{JetReconstruction.TilingDef, AbstractFloat, AbstractFloat}">#</a> <b><u>JetReconstruction.get_tile</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_tile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tiling_setup</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TilingDef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, eta</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractFloat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, phi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractFloat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Given a <code>tiling_setup</code> object, <code>eta</code> and <code>phi</code> values, this function calculates the tile indices for the given <code>eta</code> and <code>phi</code> values.</p><p><strong>Arguments</strong></p><ul><li><p><code>tiling_setup</code>: A <code>TilingDef</code> object that contains the tiling setup parameters.</p></li><li><p><code>eta</code>: The eta value for which to calculate the tile index.</p></li><li><p><code>phi</code>: The phi value for which to calculate the tile index.</p></li></ul><p><strong>Returns</strong></p><ul><li><p><code>ieta</code>: The tile index along the eta direction.</p></li><li><p><code>iphi</code>: The tile index along the phi direction.</p></li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoUtils.jl#L232-L247" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.get_tile_cartesian_indices-Tuple{JetReconstruction.TilingDef, Int64}" href="#JetReconstruction.get_tile_cartesian_indices-Tuple{JetReconstruction.TilingDef, Int64}">#</a> <b><u>JetReconstruction.get_tile_cartesian_indices</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">get_tile_linear_index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tiling_setup</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TilingDef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i_η</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, i_ϕ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the linear index of a tile in a tiled setup. This is much faster in this function than using the LinearIndices construct (like x100, which is bonkers, but there you go...)</p><p><strong>Arguments</strong></p><ul><li><p><code>tiling_setup::TilingDef</code>: The tiling setup defining the number of tiles in each dimension.</p></li><li><p><code>i_η::Int</code>: The index of the tile in the η dimension.</p></li><li><p><code>i_ϕ::Int</code>: The index of the tile in the ϕ dimension.</p></li></ul><p><strong>Returns</strong></p><ul><li>The linear index of the tile.</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoUtils.jl#L259-L274" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.initial_history-Tuple{Any}" href="#JetReconstruction.initial_history-Tuple{Any}">#</a> <b><u>JetReconstruction.initial_history</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">initial_history</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(particles)</span></span></code></pre></div><p>Create an initial history for the given particles.</p><p><strong>Arguments</strong></p><ul><li><code>particles</code>: The initial vector of stable particles.</li></ul><p><strong>Returns</strong></p><ul><li><p><code>history</code>: An array of <code>HistoryElement</code> objects.</p></li><li><p><code>Qtot</code>: The total energy in the event.</p></li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoLL.jl#L13-L24" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.insert!-Tuple{JetReconstruction.TiledJet, JetReconstruction.TiledJet}" href="#JetReconstruction.insert!-Tuple{JetReconstruction.TiledJet, JetReconstruction.TiledJet}">#</a> <b><u>JetReconstruction.insert!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">insert!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(nextjet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TiledJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, jettomove</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TiledJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Inserts a <code>TiledJet</code> object into the linked list of <code>TiledJet</code> objects, before the <code>nextjet</code> object. The jet to move can be an isolated jet, a jet from another list or a jet from the same list</p><p><strong>Arguments</strong></p><ul><li><p><code>nextjet::TiledJet</code>: The <code>TiledJet</code> object after which <code>jettomove</code> should be inserted.</p></li><li><p><code>jettomove::TiledJet</code>: The <code>TiledJet</code> object to be inserted.</p></li></ul><p><strong>Example</strong></p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoLLStructs.jl#L95-L106" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.isvalid-Tuple{JetReconstruction.TiledJet}" href="#JetReconstruction.isvalid-Tuple{JetReconstruction.TiledJet}">#</a> <b><u>JetReconstruction.isvalid</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">isvalid</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TiledJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Check if a <code>TiledJet</code> is valid, by seeing if it is not the <code>noTiledJet</code> object.</p><p><strong>Arguments</strong></p><ul><li><code>t::TiledJet</code>: The <code>TiledJet</code> object to check.</li></ul><p><strong>Returns</strong></p><ul><li><code>Bool</code>: <code>true</code> if the <code>TiledJet</code> object is valid, <code>false</code> otherwise.</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoLLStructs.jl#L67-L77" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.jet_ranks-Tuple{ClusterSequence}" href="#JetReconstruction.jet_ranks-Tuple{ClusterSequence}">#</a> <b><u>JetReconstruction.jet_ranks</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">jet_ranks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(clusterseq</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClusterSequence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; compare_fn </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JetReconstruction</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">pt)</span></span></code></pre></div><p>Compute the ranks of jets in a given <code>ClusterSequence</code> object based on a specified comparison function.</p><p><strong>Arguments</strong></p><ul><li><p><code>clusterseq::ClusterSequence</code>: The <code>ClusterSequence</code> object containing the jets to rank.</p></li><li><p><code>compare_fn = JetReconstruction.pt</code>: The comparison function used to determine the order of the jets. Defaults to <code>JetReconstruction.pt</code>, which compares jets based on their transverse momentum.</p></li></ul><p><strong>Returns</strong></p><p>A dictionary mapping each jet index to its rank.</p><p><strong>Note</strong></p><p>This is a utility function that can be used to rank initial clusters based on a specified jet property. It can be used to assign a consistent &quot;rank&quot; to each reconstructed jet in the cluster sequence, which is useful for stable plotting of jet outputs.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/ClusterSequence.jl#L405-L425" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.m-Tuple{PseudoJet}" href="#JetReconstruction.m-Tuple{PseudoJet}">#</a> <b><u>JetReconstruction.m</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">m</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PseudoJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the invariant mass of a <code>PseudoJet</code> object. By convention if m^2 &lt; 0, then -sqrt{(-m^2)} is returned.</p><p><strong>Arguments</strong></p><ul><li><code>p::PseudoJet</code>: The <code>PseudoJet</code> object for which to compute the invariant mass.</li></ul><p><strong>Returns</strong></p><p>The invariant mass of the <code>PseudoJet</code> object.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/Pseudojet.jl#L346-L358" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.m2-Tuple{PseudoJet}" href="#JetReconstruction.m2-Tuple{PseudoJet}">#</a> <b><u>JetReconstruction.m2</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">m2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PseudoJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Calculate the invariant mass squared (m^2) of a PseudoJet.</p><p><strong>Arguments</strong></p><ul><li><code>p::PseudoJet</code>: The PseudoJet object for which to calculate the invariant mass squared.</li></ul><p><strong>Returns</strong></p><ul><li>The invariant mass squared (m^2) of the PseudoJet.</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/Pseudojet.jl#L275-L285" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.mag-Tuple{PseudoJet}" href="#JetReconstruction.mag-Tuple{PseudoJet}">#</a> <b><u>JetReconstruction.mag</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mag</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PseudoJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the magnitude of the momentum of a <code>PseudoJet</code>, <code>|p|</code>.</p><p><strong>Arguments</strong></p><ul><li><code>p::PseudoJet</code>: The <code>PseudoJet</code> object for which to compute the magnitude.</li></ul><p><strong>Returns</strong></p><p>The magnitude of the <code>PseudoJet</code> object.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/Pseudojet.jl#L288-L298" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.mass-Tuple{PseudoJet}" href="#JetReconstruction.mass-Tuple{PseudoJet}">#</a> <b><u>JetReconstruction.mass</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mass</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PseudoJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the invariant mass (alias for <code>m(p)</code>).</p><p><strong>Arguments</strong></p><ul><li><code>p::PseudoJet</code>: The PseudoJet object for which to compute the mass.</li></ul><p><strong>Returns</strong></p><ul><li>The mass of the PseudoJet.</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/Pseudojet.jl#L364-L374" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.mass2" href="#JetReconstruction.mass2">#</a> <b><u>JetReconstruction.mass2</u></b> — <i>Function</i>. <p>Alias for <code>m2</code> function</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/Pseudojet.jl#L377" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.merge_steps-Tuple{ClusterSequence}" href="#JetReconstruction.merge_steps-Tuple{ClusterSequence}">#</a> <b><u>JetReconstruction.merge_steps</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">merge_steps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(clusterseq</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClusterSequence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the number of jet-jet merge steps in a cluster sequence. This is useful to give the number of meaningful recombination steps in a jet reconstruction sequence (beam merge steps are not counted).</p><p><strong>Arguments</strong></p><ul><li><code>clusterseq::ClusterSequence</code>: The cluster sequence object.</li></ul><p><strong>Returns</strong></p><ul><li><code>merge_steps::Int</code>: The number of merge steps.</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/ClusterSequence.jl#L383-L395" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.phi-Tuple{PseudoJet}" href="#JetReconstruction.phi-Tuple{PseudoJet}">#</a> <b><u>JetReconstruction.phi</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">phi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PseudoJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the ϕ angle of a <code>PseudoJet</code> object <code>p</code>.</p><p>Note this function is a wrapper for <code>phi_02pi(p)</code>.</p><p><strong>Arguments</strong></p><ul><li><code>p::PseudoJet</code>: The <code>PseudoJet</code> object for which to compute the azimuthal angle.</li></ul><p><strong>Returns</strong></p><ul><li>The azimuthal angle of <code>p</code> in the range [0, 2π).</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/Pseudojet.jl#L202-L214" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.phi_02pi-Tuple{PseudoJet}" href="#JetReconstruction.phi_02pi-Tuple{PseudoJet}">#</a> <b><u>JetReconstruction.phi_02pi</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">phi_02pi</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PseudoJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the azimuthal angle of a <code>PseudoJet</code> object <code>p</code> in the range [0, 2π).</p><p><strong>Arguments</strong></p><ul><li><code>p::PseudoJet</code>: The <code>PseudoJet</code> object for which to compute the azimuthal angle.</li></ul><p><strong>Returns</strong></p><ul><li>The azimuthal angle of <code>p</code> in the range [0, 2π).</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/Pseudojet.jl#L217-L227" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.pt-Tuple{PseudoJet}" href="#JetReconstruction.pt-Tuple{PseudoJet}">#</a> <b><u>JetReconstruction.pt</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PseudoJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the scalar transverse momentum (pt) of a PseudoJet.</p><p><strong>Arguments</strong></p><ul><li><code>p::PseudoJet</code>: The PseudoJet object for which to compute the transverse momentum.</li></ul><p><strong>Returns</strong></p><ul><li>The transverse momentum (pt) of the PseudoJet.</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/Pseudojet.jl#L262-L272" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.pt2-Tuple{PseudoJet}" href="#JetReconstruction.pt2-Tuple{PseudoJet}">#</a> <b><u>JetReconstruction.pt2</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pt2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PseudoJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Get the squared transverse momentum of a PseudoJet.</p><p><strong>Arguments</strong></p><ul><li><code>p::PseudoJet</code>: The PseudoJet object.</li></ul><p><strong>Returns</strong></p><ul><li>The squared transverse momentum of the PseudoJet.</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/Pseudojet.jl#L249-L259" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.px-Tuple{PseudoJet}" href="#JetReconstruction.px-Tuple{PseudoJet}">#</a> <b><u>JetReconstruction.px</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PseudoJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the x-component of the momentum of a <code>PseudoJet</code>.</p><p><strong>Arguments</strong></p><ul><li><code>p::PseudoJet</code>: The <code>PseudoJet</code> object.</li></ul><p><strong>Returns</strong></p><ul><li>The x-component of the momentum of the <code>PseudoJet</code>.</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/Pseudojet.jl#L380-L390" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.py-Tuple{PseudoJet}" href="#JetReconstruction.py-Tuple{PseudoJet}">#</a> <b><u>JetReconstruction.py</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">py</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PseudoJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the y-component of the momentum of a <code>PseudoJet</code>.</p><p><strong>Arguments</strong></p><ul><li><code>p::PseudoJet</code>: The <code>PseudoJet</code> object.</li></ul><p><strong>Returns</strong></p><ul><li>The y-component of the momentum of the <code>PseudoJet</code>.</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/Pseudojet.jl#L393-L403" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.pz-Tuple{PseudoJet}" href="#JetReconstruction.pz-Tuple{PseudoJet}">#</a> <b><u>JetReconstruction.pz</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">pz</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PseudoJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Return the z-component of the momentum of a <code>PseudoJet</code>.</p><p><strong>Arguments</strong></p><ul><li><code>p::PseudoJet</code>: The <code>PseudoJet</code> object.</li></ul><p><strong>Returns</strong></p><ul><li>The z-component of the momentum of the <code>PseudoJet</code>.</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/Pseudojet.jl#L406-L416" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.rapidity-Tuple{PseudoJet}" href="#JetReconstruction.rapidity-Tuple{PseudoJet}">#</a> <b><u>JetReconstruction.rapidity</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rapidity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PseudoJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the rapidity of a <code>PseudoJet</code> object.</p><p><strong>Arguments</strong></p><ul><li><code>p::PseudoJet</code>: The <code>PseudoJet</code> object for which to compute the rapidity.</li></ul><p><strong>Returns</strong></p><p>The rapidity of the <code>PseudoJet</code> object.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/Pseudojet.jl#L233-L243" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.reco_state-Tuple{ClusterSequence, Any}" href="#JetReconstruction.reco_state-Tuple{ClusterSequence, Any}">#</a> <b><u>JetReconstruction.reco_state</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">reco_state</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cs</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClusterSequence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, pt_ranks; iteration</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>This function returns the reconstruction state of a <code>ClusterSequence</code> object based on a given iteration number in the reconstruction.</p><p><strong>Arguments</strong></p><ul><li><p><code>cs::ClusterSequence</code>: The <code>ClusterSequence</code> object to update.</p></li><li><p><code>ranks</code>: The ranks of the original clusters, that are inherited by peudojets</p></li></ul><p>during the reconstruction process.</p><ul><li><p><code>iteration=0</code>: The iteration number to consider for updating the reconstruction state (0 represents the initial state).</p></li><li><p><code>ignore_beam_merge=true</code>: Ignore beam merging steps in the reconstruction (which produce no change in status).</p></li></ul><p><strong>Returns</strong></p><p>A dictionary representing a snapshot of the reconstruction state.</p><p><strong>Details</strong></p><p>The function starts by initializing the reconstruction state with the initial particles. Then, it walks over the iteration sequence and updates the reconstruction state based on the history of recombination and finalization/beam merger steps.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/ClusterSequence.jl#L459-L482" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.rightneighbours-Tuple{Int64, JetReconstruction.Tiling}" href="#JetReconstruction.rightneighbours-Tuple{Int64, JetReconstruction.Tiling}">#</a> <b><u>JetReconstruction.rightneighbours</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rightneighbours</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(center</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tiling</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tiling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the indices of the right neighbors of a given center index in a tiling. This is used in the inital sweep to calculate the nearest neighbors, where the search between jets for the nearest neighbour is bi-directional, thus when a tile is considered only the right neighbours are needed to compare jet distances as the left-hand tiles have been done from that tile already.</p><p><strong>Arguments</strong></p><ul><li><p><code>center::Int</code>: The center index.</p></li><li><p><code>tiling::Tiling</code>: The tiling object.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>Surrounding</code>: An object containing the indices of the right neighbors.</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoLLStructs.jl#L288-L303" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.set_momentum!-Tuple{PseudoJet, Vararg{Any, 4}}" href="#JetReconstruction.set_momentum!-Tuple{PseudoJet, Vararg{Any, 4}}">#</a> <b><u>JetReconstruction.set_momentum!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_momentum!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(j</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PseudoJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, px, py, pz, E)</span></span></code></pre></div><p>Set the momentum components and energy of a <code>PseudoJet</code> object.</p><p><strong>Arguments</strong></p><ul><li><p><code>j::PseudoJet</code>: The <code>PseudoJet</code> object to set the momentum for.</p></li><li><p><code>px</code>: The x-component of the momentum.</p></li><li><p><code>py</code>: The y-component of the momentum.</p></li><li><p><code>pz</code>: The z-component of the momentum.</p></li><li><p><code>E</code>: The energy of the particle.</p></li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/Pseudojet.jl#L118-L129" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.set_nearest_neighbours!-Tuple{ClusterSequence, JetReconstruction.Tiling, Vector{JetReconstruction.TiledJet}}" href="#JetReconstruction.set_nearest_neighbours!-Tuple{ClusterSequence, JetReconstruction.Tiling, Vector{JetReconstruction.TiledJet}}">#</a> <b><u>JetReconstruction.set_nearest_neighbours!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">set_nearest_neighbours!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(clusterseq</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClusterSequence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tiling</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tiling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tiledjets</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{TiledJet}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>This function sets the nearest neighbor information for all jets in the <code>tiledjets</code> vector.</p><p><strong>Arguments</strong></p><ul><li><p><code>clusterseq::ClusterSequence</code>: The cluster sequence object.</p></li><li><p><code>tiling::Tiling</code>: The tiling object.</p></li><li><p><code>tiledjets::Vector{TiledJet}</code>: The vector of tiled jets.</p></li></ul><p><strong>Returns</strong></p><ul><li><p><code>NNs::Vector{TiledJet}</code>: The vector of nearest neighbor jets.</p></li><li><p><code>diJ::Vector{Float64}</code>: The vector of diJ values.</p></li></ul><p>The function iterates over each tile in the <code>tiling</code> and sets the nearest neighbor information for each jet in the tile. It then looks for neighbor jets in the neighboring tiles and updates the nearest neighbor information accordingly. Finally, it creates the diJ table and returns the vectors of nearest neighbor jets and diJ values.</p><p>Note: The diJ values are calculated as the kt distance multiplied by R^2.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoLL.jl#L155-L177" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.setup_tiling-Union{Tuple{T}, Tuple{Vector{T}, AbstractFloat}} where T&lt;:AbstractFloat" href="#JetReconstruction.setup_tiling-Union{Tuple{T}, Tuple{Vector{T}, AbstractFloat}} where T&lt;:AbstractFloat">#</a> <b><u>JetReconstruction.setup_tiling</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setup_tiling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(eta</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Vector{T}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Rparam</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractFloat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> T </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> AbstractFloat</span></span></code></pre></div><p>This function sets up the tiling parameters for a reconstruction given a vector of rapidities <code>eta</code> and a radius parameter <code>Rparam</code>.</p><p><strong>Arguments</strong></p><ul><li><p><code>eta::Vector{T}</code>: A vector of rapidities.</p></li><li><p><code>Rparam::AbstractFloat</code>: The jet radius parameter.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>tiling_setup</code>: A <code>TilingDef</code> object containing the tiling setup parameters.</li></ul><p><strong>Description</strong></p><p>The function first decides the tile sizes based on the <code>Rparam</code> value. It then determines the number of tiles in the phi direction (<code>n_tiles_phi</code>) based on the tile size. Next, it determines the rapidity extent of the input <code>eta</code> vector and adjusts the values accordingly. Finally, it creates a <code>TilingDef</code> object with the calculated tiling parameters and returns it.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoUtils.jl#L140-L159" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.surrounding-Tuple{Int64, JetReconstruction.Tiling}" href="#JetReconstruction.surrounding-Tuple{Int64, JetReconstruction.Tiling}">#</a> <b><u>JetReconstruction.surrounding</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">surrounding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(center</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tiling</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tiling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the surrounding indices of a given center index in a tiling.</p><p><strong>Arguments</strong></p><ul><li><p><code>center::Int</code>: The center index.</p></li><li><p><code>tiling::Tiling</code>: The tiling object.</p></li></ul><p><strong>Returns</strong></p><ul><li><code>Surrounding</code>: An object containing the surrounding indices.</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoLLStructs.jl#L253-L264" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.tile_index-Tuple{Any, Float64, Float64}" href="#JetReconstruction.tile_index-Tuple{Any, Float64, Float64}">#</a> <b><u>JetReconstruction.tile_index</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tile_index</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tiling_setup, eta</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Float64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, phi</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Float64</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Compute the tile index for a given (eta, phi) coordinate.</p><p><strong>Arguments</strong></p><ul><li><p><code>tiling_setup</code>: The tiling setup object containing the tile size and number of tiles.</p></li><li><p><code>eta::Float64</code>: The eta coordinate.</p></li><li><p><code>phi::Float64</code>: The phi coordinate.</p></li></ul><p><strong>Returns</strong></p><p>The tile index corresponding to the (eta, phi) coordinate.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoLL.jl#L85-L97" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.tiledjet_remove_from_tiles!-Tuple{Any, Any}" href="#JetReconstruction.tiledjet_remove_from_tiles!-Tuple{Any, Any}">#</a> <b><u>JetReconstruction.tiledjet_remove_from_tiles!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tiledjet_remove_from_tiles!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tiling, jet)</span></span></code></pre></div><p>Remove a jet from the given tiling structure.</p><p><strong>Arguments</strong></p><ul><li><p><code>tiling</code>: The tiling structure from which the jet will be removed.</p></li><li><p><code>jet</code>: The jet to be removed from the tiling structure.</p></li></ul><p><strong>Description</strong></p><p>This function removes a jet from the tiling structure. It adjusts the linked list to be consistent with the removal of the jet.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoLLStructs.jl#L320-L332" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.tiledjet_set_jetinfo!-Tuple{JetReconstruction.TiledJet, ClusterSequence, JetReconstruction.Tiling, Any, Any, Any}" href="#JetReconstruction.tiledjet_set_jetinfo!-Tuple{JetReconstruction.TiledJet, ClusterSequence, JetReconstruction.Tiling, Any, Any, Any}">#</a> <b><u>JetReconstruction.tiledjet_set_jetinfo!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">tiledjet_set_jetinfo!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(jet</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TiledJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, clusterseq</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ClusterSequence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, tiling</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tiling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, jets_index, R2, p)</span></span></code></pre></div><p>Initialise a tiled jet from a PseudoJet (using an index into our ClusterSequence)</p><p>Arguments:</p><ul><li><p><code>jet::TiledJet</code>: The TiledJet object to set the information for.</p></li><li><p><code>clusterseq::ClusterSequence</code>: The ClusterSequence object containing the jets.</p></li><li><p><code>tiling::Tiling</code>: The Tiling object containing the tile information.</p></li><li><p><code>jets_index</code>: The index of the jet in the ClusterSequence.</p></li><li><p><code>R2</code>: The jet radius parameter squared.</p></li><li><p><code>p</code>: The power to raise the pt2 value to.</p></li></ul><p>This function sets the eta, phi, kt2, jets_index, NN_dist, NN, tile_index, previous, and next fields of the TiledJet object.</p><p>Returns:</p><ul><li><code>nothing</code></li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoLL.jl#L112-L129" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.upd_nn_crosscheck!-Tuple{Int64, Int64, Int64, Vararg{Any, 5}}" href="#JetReconstruction.upd_nn_crosscheck!-Tuple{Int64, Int64, Int64, Vararg{Any, 5}}">#</a> <b><u>JetReconstruction.upd_nn_crosscheck!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">upd_nn_crosscheck!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i, from, to, rapidity_array, phi_array, R2, nndist, nn)</span></span></code></pre></div><p>Update the nearest neighbor information for a given particle index <code>i</code> against all particles in the range indexes <code>from</code> to <code>to</code>. The function updates the <code>nndist</code> and <code>nn</code> arrays with the nearest neighbor distance and index respectively, both for particle <code>i</code> and the checked particles <code>[from:to]</code> (hence <em>crosscheck</em>).</p><p><strong>Arguments</strong></p><ul><li><p><code>i::Int</code>: The index of the particle to update and check against.</p></li><li><p><code>from::Int</code>: The starting index of the range of particles to check against.</p></li><li><p><code>to::Int</code>: The ending index of the range of particles to check against.</p></li><li><p><code>rapidity_array</code>: An array containing the rapidity values of all particles.</p></li><li><p><code>phi_array</code>: An array containing the phi values of the all particles.</p></li><li><p><code>R2</code>: The squared jet distance threshold for considering a particle as a neighbour.</p></li><li><p><code>nndist</code>: The array that stores the nearest neighbor distances.</p></li><li><p><code>nn</code>: The array that stores the nearest neighbor indices.</p></li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/PlainAlgo.jl#L47-L66" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.upd_nn_nocross!-Tuple{Int64, Int64, Int64, Vararg{Any, 5}}" href="#JetReconstruction.upd_nn_nocross!-Tuple{Int64, Int64, Int64, Vararg{Any, 5}}">#</a> <b><u>JetReconstruction.upd_nn_nocross!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">upd_nn_nocross!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i, from, to, rapidity_array, phi_array, R2, nndist, nn)</span></span></code></pre></div><p>Update the nearest neighbor information for a given particle index <code>i</code> against all particles in the range indexes <code>from</code> to <code>to</code>. The function updates the <code>nndist</code> and <code>nn</code> arrays with the nearest neighbor distance and index respectively, only for particle <code>i</code> (hence <em>nocross</em>).</p><p><strong>Arguments</strong></p><ul><li><p><code>i::Int</code>: The index of the particle to update and check against.</p></li><li><p><code>from::Int</code>: The starting index of the range of particles to check against.</p></li><li><p><code>to::Int</code>: The ending index of the range of particles to check against.</p></li><li><p><code>rapidity_array</code>: An array containing the rapidity values of all particles.</p></li><li><p><code>phi_array</code>: An array containing the phi values of the all particles.</p></li><li><p><code>R2</code>: The squared jet distance threshold for considering a particle as a neighbour.</p></li><li><p><code>nndist</code>: The array that stores the nearest neighbor distances.</p></li><li><p><code>nn</code>: The array that stores the nearest neighbor indices.</p></li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/PlainAlgo.jl#L89-L107" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.upd_nn_step!-NTuple{12, Any}" href="#JetReconstruction.upd_nn_step!-NTuple{12, Any}">#</a> <b><u>JetReconstruction.upd_nn_step!</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">upd_nn_step!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(i, j, k, N, Nn, kt2_array, rapidity_array, phi_array, R2, nndist, nn, nndij)</span></span></code></pre></div><p>Update the nearest neighbor information after a jet merge step.</p><p>Arguments:</p><ul><li><p><code>i</code>: Index of the first particle in the last merge step.</p></li><li><p><code>j</code>: Index of the second particle in the last merge step.</p></li><li><p><code>k</code>: Index of the current particle for which the nearest neighbour will be updated.</p></li><li><p><code>N</code>: Total number of particles (currently vaild array indexes are <code>[1:N]</code>).</p></li><li><p><code>Nn</code>: Number of nearest neighbors to consider.</p></li><li><p><code>kt2_array</code>: Array of transverse momentum squared values.</p></li><li><p><code>rapidity_array</code>: Array of rapidity values.</p></li><li><p><code>phi_array</code>: Array of azimuthal angle values.</p></li><li><p><code>R2</code>: Distance threshold squared for nearest neighbors.</p></li><li><p><code>nndist</code>: Array of nearest neighbor geometric distances.</p></li><li><p><code>nn</code>: Array of nearest neighbor indices.</p></li><li><p><code>nndij</code>: Array of metric distances between particles.</p></li></ul><p>This function updates the nearest neighbor information for the current particle <code>k</code> by considering the distances to particles <code>i</code> and <code>j</code>. It checks if the distance between <code>k</code> and <code>i</code> is smaller than the current nearest neighbor distance for <code>k</code>, and updates the nearest neighbor information accordingly. It also updates the nearest neighbor information for <code>i</code> if the distance between <code>k</code> and <code>i</code> is smaller than the current nearest neighbor distance for <code>i</code>. Finally, it checks if the nearest neighbor of <code>k</code> is the total number of particles <code>Nn</code> and updates it to <code>j</code> if necessary.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/PlainAlgo.jl#L129-L150" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.η" href="#JetReconstruction.η">#</a> <b><u>JetReconstruction.η</u></b> — <i>Function</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> η </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> eta</span></span></code></pre></div><p>Alias for the pseudorapidity function, <code>eta</code>.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/Pseudojet.jl#L339-L343" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.FourMomentum" href="#JetReconstruction.FourMomentum">#</a> <b><u>JetReconstruction.FourMomentum</u></b> — <i>Type</i>. <p>Interface for composite types that includes fields px, py, py, and E that represents the components of a four-momentum vector.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/Pseudojet.jl#L8-L10" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.HistoryElement" href="#JetReconstruction.HistoryElement">#</a> <b><u>JetReconstruction.HistoryElement</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> HistoryElement</span></span></code></pre></div><p>A struct holding a record of jet mergers and finalisations</p><p>Fields:</p><ul><li><p><code>parent1</code>: Index in history where first parent of this jet was created (NonexistentParent if this jet is an original particle)</p></li><li><p><code>parent2</code>: Index in history where second parent of this jet was created (NonexistentParent if this jet is an original particle); BeamJet if this history entry just labels the fact that the jet has recombined with the beam)</p></li><li><p><code>child</code>: Index in history where the current jet is recombined with another jet to form its child. It is Invalid if this jet does not further recombine.</p></li><li><p><code>jetp_index</code>: Index in the jets vector where we will find the PseudoJet object corresponding to this jet (i.e. the jet created at this entry of the history). NB: if this element of the history corresponds to a beam recombination, then <code>jetp_index=Invalid</code>.</p></li><li><p><code>dij</code>: The distance corresponding to the recombination at this stage of the clustering.</p></li><li><p><code>max_dij_so_far</code>: The largest recombination distance seen so far in the clustering history.</p></li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/ClusterSequence.jl#L22-L43" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.HistoryElement-Tuple{Any}" href="#JetReconstruction.HistoryElement-Tuple{Any}">#</a> <b><u>JetReconstruction.HistoryElement</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">HistoryElement</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(jetp_index)</span></span></code></pre></div><p>Constructs a <code>HistoryElement</code> object with the given <code>jetp_index</code>, used for initialising the history with original particles.</p><p><strong>Arguments</strong></p><ul><li><code>jetp_index</code>: The index of the jetp.</li></ul><p><strong>Returns</strong></p><p>A <code>HistoryElement</code> object.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/ClusterSequence.jl#L53-L64" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.JetWithAncestors" href="#JetReconstruction.JetWithAncestors">#</a> <b><u>JetReconstruction.JetWithAncestors</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JetWithAncestors</span></span></code></pre></div><p>A struct representing a jet with its origin ancestors.</p><p><strong>Fields</strong></p><ul><li><p><code>self::PseudoJet</code>: The PseudoJet object for this jet.</p></li><li><p><code>jetp_index::Int</code>: The index of the jet in the corresponding cluster sequence.</p></li><li><p><code>ancestors::Set{Int}</code>: A set of indices representing the jetp_indexes of ancestors of the jet (in the cluster sequence).</p></li><li><p><code>jet_rank::Int</code>: The rank of the jet based on a comparison of all of the jet&#39;s ancestors</p></li></ul><p><strong>Note</strong></p><p>This structure needs its associated cluster sequence origin to be useful.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/ClusterSequence.jl#L436-L451" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.Surrounding" href="#JetReconstruction.Surrounding">#</a> <b><u>JetReconstruction.Surrounding</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Surrounding{N}</span></span></code></pre></div><p>Structure used for iterating over neighbour tiles.</p><p><strong>Fields</strong></p><ul><li><code>indices::NTuple{N, Int}</code>: A tuple of <code>N</code> integers representing the indices.</li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoLLStructs.jl#L227-L234" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.TiledJet" href="#JetReconstruction.TiledJet">#</a> <b><u>JetReconstruction.TiledJet</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TiledJet</span></span></code></pre></div><p>TiledJet represents a jet in a tiled algorithm for jet reconstruction, with additional information to track the jet&#39;s position in the tiled structures.</p><p><strong>Fields</strong></p><ul><li><p><code>id::Int</code>: The ID of the jet.</p></li><li><p><code>eta::Float64</code>: The rapidity of the jet.</p></li><li><p><code>phi::Float64</code>: The azimuthal angle of the jet.</p></li><li><p><code>kt2::Float64</code>: The transverse momentum squared of the jet.</p></li><li><p><code>NN_dist::Float64</code>: The distance to the nearest neighbor.</p></li><li><p><code>jets_index::Int</code>: The index of the jet in the jet array.</p></li><li><p><code>tile_index::Int</code>: The index of the tile in the tile array.</p></li><li><p><code>dij_posn::Int</code>: The position of this jet in the dij compact array.</p></li><li><p><code>NN::TiledJet</code>: The nearest neighbor.</p></li><li><p><code>previous::TiledJet</code>: The previous jet.</p></li><li><p><code>next::TiledJet</code>: The next jet.</p></li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoLLStructs.jl#L6-L24" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.TiledJet-Tuple{Any}" href="#JetReconstruction.TiledJet-Tuple{Any}">#</a> <b><u>JetReconstruction.TiledJet</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TiledJet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(id)</span></span></code></pre></div><p>Constructs a <code>TiledJet</code> object with the given <code>id</code> and initializes its properties to zero.</p><p><strong>Arguments</strong></p><ul><li><code>id</code>: The ID of the <code>TiledJet</code> object.</li></ul><p><strong>Returns</strong></p><p>A <code>TiledJet</code> object with the specified <code>id</code> and values set to zero or noTiledJet.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoLLStructs.jl#L80-L90" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.Tiling" href="#JetReconstruction.Tiling">#</a> <b><u>JetReconstruction.Tiling</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Tiling</span></span></code></pre></div><p>The <code>Tiling</code> struct represents a tiling configuration for jet reconstruction.</p><p><strong>Fields</strong></p><ul><li><p><code>setup::TilingDef</code>: The tiling definition used for the configuration.</p></li><li><p><code>tiles::Matrix{TiledJet}</code>: A matrix of tiled jets, containing the first jet in each tile (then the linked list of the first jet is followed to get access to all jets in this tile).</p></li><li><p><code>positions::Matrix{Int}</code>: Used to track tiles that are on the edge of ϕ array, where neighbours need to be wrapped around.</p></li><li><p><code>tags::Matrix{Bool}</code>: The matrix of tags indicating whether a tile is valid or not (set to <code>false</code> initially, then <code>true</code> when the tile has been setup properly).</p></li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoLLStructs.jl#L169-L185" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.Tiling-Tuple{JetReconstruction.TilingDef}" href="#JetReconstruction.Tiling-Tuple{JetReconstruction.TilingDef}">#</a> <b><u>JetReconstruction.Tiling</u></b> — <i>Method</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tiling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(setup</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TilingDef</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Constructs a intial <code>Tiling</code> object based on the provided <code>setup</code> parameters.</p><p><strong>Arguments</strong></p><ul><li><code>setup::TilingDef</code>: The setup parameters for the tiling.</li></ul><p><strong>Returns</strong></p><p>A <code>Tiling</code> object.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoLLStructs.jl#L193-L203" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.TilingDef" href="#JetReconstruction.TilingDef">#</a> <b><u>JetReconstruction.TilingDef</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TilingDef</span></span></code></pre></div><p>A struct representing the definition of a spcific tiling scheme.</p><p><strong>Fields</strong></p><ul><li><p><code>_tiles_eta_min::Float64</code>: The minimum rapidity of the tiles.</p></li><li><p><code>_tiles_eta_max::Float64</code>: The maximum rapidity of the tiles.</p></li><li><p><code>_tile_size_eta::Float64</code>: The size of a tile in rapidity (usually R^2).</p></li><li><p><code>_tile_size_phi::Float64</code>: The size of a tile in phi (usually a bit more than R^2).</p></li><li><p><code>_n_tiles_eta::Int</code>: The number of tiles across rapidity.</p></li><li><p><code>_n_tiles_phi::Int</code>: The number of tiles across phi.</p></li><li><p><code>_n_tiles::Int</code>: The total number of tiles.</p></li><li><p><code>_tiles_ieta_min::Int</code>: The minimum rapidity tile index.</p></li><li><p><code>_tiles_ieta_max::Int</code>: The maximum rapidity tile index.</p></li></ul><p><strong>Constructor</strong></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>TilingDef(_tiles_eta_min, _tiles_eta_max, _tile_size_eta, _tile_size_phi,</span></span>
<span class="line"><span>	_n_tiles_eta, _n_tiles_phi, _tiles_ieta_min, _tiles_ieta_max)</span></span></code></pre></div><p>Constructs a <code>TilingDef</code> object with the given parameters.</p><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoUtils.jl#L3-L24" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.neighbour_tiles" href="#JetReconstruction.neighbour_tiles">#</a> <b><u>JetReconstruction.neighbour_tiles</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> neighbour_tiles</span></span></code></pre></div><p>A struct representing the neighbouring tiles.</p><p>A struct for iterating over all neighbour tiles for a given Cartesian tile index. These are the tiles above and to the right of the given tile (X=included, O=not included):</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>XXX</span></span>
<span class="line"><span>X.X</span></span>
<span class="line"><span>XXX</span></span></code></pre></div><p>Note, rapidity coordinate must be in range, ϕ coordinate wraps</p><p><strong>Fields</strong></p><ul><li><p><code>n_η::Int</code>: Number of η tiles</p></li><li><p><code>n_ϕ::Int</code>: Number of ϕ tiles</p></li><li><p><code>start_η::Int</code>: Centre η tile coordinate</p></li><li><p><code>start_ϕ::Int</code>: Centre ϕ tile coordinate</p></li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoUtils.jl#L340-L360" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="JetReconstruction.rightmost_tiles" href="#JetReconstruction.rightmost_tiles">#</a> <b><u>JetReconstruction.rightmost_tiles</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> rightmost_tiles</span></span></code></pre></div><p>A struct for iterating over rightmost tiles for a given Cartesian tile index. These are the tiles above and to the right of the given tile (X=included, O=not included):</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>XXX</span></span>
<span class="line"><span>O.X</span></span>
<span class="line"><span>OOO</span></span></code></pre></div><p>Note, rapidity coordinate must be in range, ϕ coordinate wraps</p><p><strong>Fields</strong></p><ul><li><p><code>n_η::Int</code>: Number of η tiles</p></li><li><p><code>n_ϕ::Int</code>: Number of ϕ tiles</p></li><li><p><code>start_η::Int</code>: Centre η tile coordinate</p></li><li><p><code>start_ϕ::Int</code>: Centre ϕ tile coordinate</p></li></ul><p><a href="https://github.com/JuliaHEP/JetReconstruction.jl/blob/fcb59572ed1eddd3219cf5bfe9eb81b58c0e7ff2/src/TiledAlgoUtils.jl#L290-L308" target="_blank" rel="noreferrer">source</a></p></div><br>`,158),a=[n];function r(l,d,c,p,h,u){return i(),t("div",null,a)}const k=e(o,[["render",r]]);export{b as __pageData,k as default};
